#===============================================================================
# Mint Example - Server Service File
#===============================================================================

[Unit]
Description=Spin Up Mint
# List any services that must be online before or wait untl after this service is activated.
After=docker.service elasticsearch.service kibana.service

[Service]
TimeoutStartSec=0

ExecStartPre=/usr/bin/echo "========================"
ExecStartPre=/usr/bin/echo "  New Service Starting"
ExecStartPre=/usr/bin/echo "========================"

# Display this service's IP addresses.
EnvironmentFile=/etc/environment
ExecStartPre=/usr/bin/echo "Public IP Address: ${COREOS_PUBLIC_IPV4}"
ExecStartPre=/usr/bin/echo "Private IP Address: ${COREOS_PRIVATE_IPV4}"

# Register this service with Sidekick Server.
ExecStartPre=/usr/bin/echo "Registering Service with DNS.  This will take a moment..."
ExecStartPre=/usr/bin/curl -XPOST kick.flavor.cluster:2000 -d '\
"hostname": "input.mint.flavor.pandastrike.com",      \
"ip_address": "${COREOS_PUBLIC_IPV4}",  \
"port": "3020",  \
"type": "A"'

# Delete any old containers with this image.
ExecStartPre=-/usr/bin/docker kill mint
ExecStartPre=-/usr/bin/docker rm mint

# Build the service's Docker container.  We clone the project repo from the hook-server to wherever
# this service is running.  Then find the Dockerfile to launch a build.
ExecStartPre=/usr/bin/echo "Building Docker Image - If it's not cached yet, this could take a moment."
ExecStartPre=-/usr/bin/bash -c "/usr/bin/rm -rf /home/core/launch/mint"
ExecStartPre=/usr/bin/bash -c "/usr/bin/git clone git://hook.flavor.cluster:2001/repos/mint.git /home/core/launch/mint"
ExecStartPre=/usr/bin/docker build --tag="mint_image" /home/core/launch/mint/launch/mint/.

# Launch the container.
ExecStart=/usr/bin/docker run --name mint -p 3020:8080 \
mint_image /bin/bash -c \
'cd mint && git pull && npm start'

[Install]
WantedBy=multi-user.target
