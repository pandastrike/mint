#===============================================================================
# Mint Example - Kibana Service File
#===============================================================================

[Unit]
Description=Spin Up Kibana
# List any services that must be online before or wait untl after this service is activated.
Before=mint.service
After=docker.service elasticsearch.service

[Service]
TimeoutStartSec=0

ExecStartPre=/usr/bin/echo "========================"
ExecStartPre=/usr/bin/echo "  New Service Starting"
ExecStartPre=/usr/bin/echo "========================"

# Display this service's IP addresses.
EnvironmentFile=/etc/environment
ExecStartPre=/usr/bin/echo "Public IP Address: ${COREOS_PUBLIC_IPV4}"
ExecStartPre=/usr/bin/echo "Private IP Address: ${COREOS_PRIVATE_IPV4}"

# Register this service with DNS.
ExecStartPre=/usr/bin/echo "Registering Service with DNS.  This will take a moment..."
ExecStartPre=/usr/bin/curl -XPOST kick.flavor.cluster:2000 -d '\
"hostname": "kibana.mint.flavor.pandastrike.com",      \
"ip_address": "${COREOS_PUBLIC_IPV4}",  \
"port": "3021",  \
"type": "A"'

# Delete any old containers with this image.
ExecStartPre=-/usr/bin/docker kill mint-kibana
ExecStartPre=-/usr/bin/docker rm mint-kibana

# Pull The Service's Docker Container.
ExecStartPre=/usr/bin/echo "Pulling Docker image from public repo."
ExecStartPre=/usr/bin/docker pull pandastrike/pc_kibana

# Launch the container.
ExecStart=/usr/bin/docker run --name mint-kibana -p 3021:5601 \
  pandastrike/pc_kibana /bin/bash -c \
  'cd /kibana-4.0.0-beta3/config &&\
  sed "s/localhost:9200/mint-es.flavor.cluster:2020/g" < kibana.yml > temp && \
  mv temp kibana.yml && \
  cd /kibana-4.0.0-beta3/bin && ./kibana'


[Install]
WantedBy=multi-user.target
